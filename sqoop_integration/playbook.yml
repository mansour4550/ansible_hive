---
- name: Integrate Sqoop with Apache Atlas on Edge1
  hosts: edge1
  vars:
    ansible_connection: ssh
    ansible_user: hadoopZetta
    atlas_install_dir: /opt/apache-atlas-2.4.0
    hive_install_dir: /opt/apache-hive-3.1.3-bin
    atlas_source_dir: /home/u1/hadoopZetta/apache-atlas-sources-2.4.0
    sqoop_install_dir: /opt/sqoop-1.4.7.bin__hadoop-2.6.0
    atlas_conf_dir: "{{ atlas_install_dir }}/conf"
    atlas_rest_addresses: "http://192.168.22.10:21000,http://192.168.22.11:21000"
    kafka_bootstrap_servers: "192.168.22.14:9092"
    zookeeper_connect: "192.168.22.10:2181,192.168.22.11:2181,192.168.22.16:2181"
    cluster_name: "mycluster"
    sqoop_tarball_url: "https://archive.apache.org/dist/sqoop/1.4.7/sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz"

  tasks:
    - name: Install required tools
      package:
        name: [wget, git]
        state: present
      become: yes

   # - name: Download and extract Sqoop
      block:
       # - name: Download Sqoop tarball
        #  get_url:
         #   url: "{{ sqoop_tarball_url }}"
          #  dest: /tmp/sqoop.tar.gz
           # mode: '0644'

        - #name: Extract Sqoop tarball
          #unarchive:
           # src: /tmp/sqoop.tar.gz
            #dest: /opt
            #remote_src: yes
            #owner: "{{ ansible_user }}"
            #group: "{{ ansible_user }}"
            #mode: '0755'

        - name: Set ownership for Sqoop directory
          file:
            path: "{{ sqoop_install_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'
      become: yes

    - name: Copy Hive JDBC JARs to Sqoop lib
      copy:
        src: "{{ item.src }}"
        dest: "{{ sqoop_install_dir }}/lib/{{ item.dest }}"
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0664'
      loop:
        - { src: "{{ hive_install_dir }}/lib/hive-jdbc-3.1.3.jar", dest: "hive-jdbc-3.1.3.jar" }
        - { src: "{{ hive_install_dir }}/lib/hive-jdbc-handler-3.1.3.jar", dest: "hive-jdbc-handler-3.1.3.jar" }

    - name: Add Hive JDBC jars to HADOOP_CLASSPATH in .bashrc
      lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: "export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:{{ hive_install_dir }}/lib/hive-jdbc-3.1.3.jar:{{ hive_install_dir }}/lib/hive-service-3.1.3.jar:{{ hive_install_dir }}/lib/hive-exec-3.1.3.jar"
        insertafter: EOF

    - name: Copy and extract Atlas Sqoop hook
      block:
        - name: Copy hook tarball from master1
          command: >
            scp hadoopZetta@192.168.22.10:{{ atlas_source_dir }}/distro/target/apache-atlas-2.4.0-sqoop-hook.tar.gz
            {{ atlas_source_dir }}/distro/target/
          delegate_to: localhost

        - name: Extract hook tarball
          unarchive:
            src: "{{ atlas_source_dir }}/distro/target/apache-atlas-2.4.0-sqoop-hook.tar.gz"
            dest: "{{ atlas_source_dir }}/distro/target"
            remote_src: yes
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'

    - name: Setup Atlas Sqoop hook
      block:
        - name: Create hook directory in Atlas
          file:
            path: "{{ atlas_install_dir }}/hook/sqoop"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'
          become: yes

        - name: Copy hook files to Atlas
          copy:
            src: "{{ atlas_source_dir }}/distro/target/apache-atlas-sqoop-hook-2.4.0/hook/sqoop/"
            dest: "{{ atlas_install_dir }}/hook/sqoop/"
            remote_src: yes
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'

    - name: Retrieve and configure Atlas application properties
      block:
        - name: Copy from master1
          command: >
            scp hadoopZetta@192.168.22.10:{{ atlas_conf_dir }}/atlas-application.properties
            {{ atlas_conf_dir }}/atlas-application.properties
          delegate_to: localhost

        - name: Generate Sqoop's atlas-application.properties from template
          template:
            src: templates/atlas-application.properties.j2
            dest: "{{ sqoop_install_dir }}/conf/atlas-application.properties"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0644'

    - name: Add Atlas Sqoop configuration to sqoop-site.xml
      blockinfile:
        path: "{{ sqoop_install_dir }}/conf/sqoop-site.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          <property>
            <name>atlas.rest.address</name>
            <value>{{ atlas_rest_addresses }}</value>
          </property>
          <property>
            <name>sqoop.job.data.publish.class</name>
            <value>org.apache.atlas.sqoop.hook.SqoopHook</value>
          </property>
          <property>
            <name>atlas.cluster.name</name>
            <value>{{ cluster_name }}</value>
          </property>

    - name: Symlink hook JARs to Sqoop lib
      shell: ln -sf {{ atlas_install_dir }}/hook/sqoop/*.jar {{ sqoop_install_dir }}/lib/
      args:
        executable: /bin/bash
      become: yes

    - name: Configure sqoop-env.sh
      copy:
        src: files/sqoop-env.sh
        dest: "{{ sqoop_install_dir }}/conf/sqoop-env.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      become: yes

    - name: Create placeholder directories for optional components
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      loop:
        - /opt/hbase
        - /opt/accumulo
        - /opt/zookeeper
      become: yes

    - name: Add required JARs for Sqoop Atlas integration
      block:
        - name: Download commons-configuration JAR
          get_url:
            url: https://repo1.maven.org/maven2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar
            dest: "{{ sqoop_install_dir }}/lib/commons-configuration-1.10.jar"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0664'

        - name: Copy custom Sqoop Atlas patch JAR
          copy:
            src: files/sqoop-atlas-patch.jar
            dest: "{{ sqoop_install_dir }}/lib/sqoop-atlas-patch.jar"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0664'
      become: yes
